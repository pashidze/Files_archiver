Нужно написать программу, выполняющую следующие действия:

_Вводные данные_.

1. Программа-интерфейс получает путь к некоторой папке: 
через командную строку, через конфигурационный файл, 
через графическую формочку - как угодно.
Программа обходит указанную папку рекурсивно (вместе с подпапками), 
каждый из обнаруженных там файлов добавляет в очередь на обработку.

2. Программы-обработчики забирают задачи из очереди и сжимают файлы 
каким-либо общедоступным алгоритмом.

3. Алгоритм сжатия реализовывать не нужно: нужно найти какую-нибудь 
подходящую библиотеку с открытыми исходниками и воспользоваться ею, 
тут полная свобода - вплоть до вызова архиватора через командную 
строку (если будет сделано так, нужно об этом предупредить). 
Каких-то особенных требований к сжатию нет: любой осмысленный алгоритм.
Но есть требование к самому процессу работы с файлами: он должен быть 
реализован как многопоточный. То есть каждый файл обрабатывается в 
треде, и таких тредов должно одновременно работать несколько. 
Количество желательно определить как количество свободных ядер процессора.

4. Заархивированные файлы помещаются в исходную папку рядом с исходным 
файлом любым удобным способом.

5. Результат предоставить в виде ссылки на git-репозиторий с историей коммитов.

6. Язык программирования - C++ (17 или новее), операционная система и 
любые детали реализации - на Ваш вкус. Система сборки - CMake.

_Задача_. Реализовать указанную в 1 пункте очередь через примитивы синхронизации
на C++ в рамках одного компьютера.

_Задача со звёздочкой_. Очередь реализовывать не требуется: необходимо взять 
готовую реализацию, например, Celery или что-то аналогичное на ваш выбор.
Данные программы должны иметь возможность запускаться одновременно 
на двух различных машинах и забирать задачи из очереди без дублирования 
в различных инстансах или потоках программы.